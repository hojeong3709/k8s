Metrics Server offers:

A single deployment that works on most clusters (see Requirements)
Fast autoscaling, collecting metrics every 15 seconds.
Resource efficiency, using 1 mili core of CPU and 2 MB of memory for each node in a cluster.
Scalable support up to 5,000 node clusters.


# wget https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

# vi components.yaml 
112 번 줄쯤 위치 아래  
       Deployment

        args:
          - --cert-dir=/tmp
          - --secure-port=443
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --kubelet-insecure-tls       <--- 항목 추가 
          - --metric-resolution=15s


# kubectl apply -f components.yaml 
serviceaccount/metrics-server unchanged
clusterrole.rbac.authorization.k8s.io/system:aggregated-metrics-reader unchanged
clusterrole.rbac.authorization.k8s.io/system:metrics-server unchanged
rolebinding.rbac.authorization.k8s.io/metrics-server-auth-reader unchanged
clusterrolebinding.rbac.authorization.k8s.io/metrics-server:system:auth-delegator unchanged
clusterrolebinding.rbac.authorization.k8s.io/system:metrics-server unchanged
service/metrics-server unchanged
deployment.apps/metrics-server configured
apiservice.apiregistration.k8s.io/v1beta1.metrics.k8s.io unchanged


# kubectl top node --use-protocol-buffers
NAME      CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%
master    244m         12%    1430Mi          75%
worker1   98m          4%     939Mi           49%
worker2   88m          4%     838Mi           44%




아래는 안해도 됨. 

****  If you are not running kube-proxy on a host running the API server, then you must make sure that the system is enabled with the following kube-apiserver flag:

--enable-aggregator-routing=true (기능게이트에 추가할 수 있다.)